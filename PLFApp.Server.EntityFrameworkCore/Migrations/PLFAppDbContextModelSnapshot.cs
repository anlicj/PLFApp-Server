// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PLFApp.Server.EntityFrameworkCore;
using System;

namespace PLFApp.Server.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(PLFAppDbContext))]
    partial class PLFAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PLFApp.Server.Core.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<int>("GoodsCategoryId");

                    b.Property<string>("GoodsName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("GoodsPictureUrl")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<decimal>("GoodsPrice");

                    b.Property<int>("GoodsState");

                    b.Property<int>("Inventory");

                    b.Property<bool>("IsDelete");

                    b.HasKey("Id");

                    b.HasIndex("GoodsCategoryId");

                    b.HasIndex("GoodsName");

                    b.HasIndex("GoodsState");

                    b.ToTable("t_Goods");
                });

            modelBuilder.Entity("PLFApp.Server.Core.GoodsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryImageSrc")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("GoodsCategoryName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<bool>("IsShowOnHomePage");

                    b.HasKey("Id");

                    b.HasIndex("IsShowOnHomePage");

                    b.ToTable("t_GoodsCategory");
                });

            modelBuilder.Entity("PLFApp.Server.Core.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDateTime");

                    b.Property<string>("HeadImageUrl")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsDelete");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("LoginIp")
                        .HasMaxLength(23);

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("MobilePhone");

                    b.ToTable("t_Member");
                });

            modelBuilder.Entity("PLFApp.Server.Core.Goods", b =>
                {
                    b.HasOne("PLFApp.Server.Core.GoodsCategory", "GoodsCategory")
                        .WithMany("Goodses")
                        .HasForeignKey("GoodsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
